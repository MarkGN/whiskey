This file explains the design decisions behind Whiskey. It's heavily inspired by the d20 system, raising the question of why not just use d20, especially considering the latter's extensive published materials.

The following is heavily opinionated and unqualified. I understand that game design has no right or wrong answer; these decisions are made against features of d20 that I personally find to detract from the experience.

=======
CARDS VS DICE
=======

When checks are mediated by dice, there's a non-negligible chance of a streak of luck, good or bad. Either is undesirable from a design perspective: they make a well-balanced encounter either boringly easy or frustratingly hard. Nobody likes a dice-driven TPK. By using cards, we can sample without replacement, and thereby reduce the variance without making outcomes wholly predictable. This helps the GM control an encounter.

An additional benefit is that, by using a standard playing deck and splitting cards by colour, we have 26 possible values rather than only 20. This reduces the impact of a +1, which means a scenario may be designed to give them out more freely, which is always fun. (+1 combat with 26 values is less impactful than +1 combat with 20 values. It's more impactful than +1 to-hit or +1 AC.) I'd split the deck by suit so we could have a range of 52, but I don't want to rely on everyone being able to mentally calculate +26 or -25 every other turn. We could use custom-printed cards, and it would be nice to be able to just read 11 rather than have to parse jack of hearts, but it's a big advantage using standardised hardware. Players can always just draw on a spare deck with a marker pen.

One possible issue is that players could metagame by way of card counting; or possibly even by preceding an encounter with junk checks, hoping to use up the bad cards, and cycling the deck if instead they use the good checks. It remains to be tested whether this is likely in practice, or whether it's a feature or a flaw: it is technically a method by which a skilful player could do better than average. To prevent the junk checking exploit, decks could be shuffled at the start of major engagements, or at GM discretion. At time of writing, the game has only been tested digitally with d26, rendering this entire point moot.

A GM might incorporate this idea into d20 by setting aside royal cards and declaring that red suits are worth +10, so as to reduce variance.

This idea was inspired by World of Warcraft's progressive percentage mechanic.

=======
NEGATIVE CONSEQUENCES
=======

Suppose, under d20, we have two duellists, each with AC 11 and +0 to-hit, who take turns attacking each other. On average, it takes two attack rolls and one damage roll per successful hit. Gameplay blocks on each die roll.

From a gameplay perspective, it's not desirable that the action blocks too often: it slows the game down, prevents a flow state, and gives players more opportunity to become bored. From a story perspective, an epic duel in which characters stand there and take turns hacking at each other isn't particularly realistic or cinematic.

Instead of asking whether a given attack hits, we could ask the question: who will get the next hit? We could declare that a successful check is still a hit, but a failure now means the enemy lands the next hit. This means fewer checks, so the game speeds up. Flavour could be narrated as desired, with characters moving around more freely. Statistically, the battle would have the same distribution over possible outcomes, assuming a mutual miss in d20 has no real consequences.

A mathematician could show that whoever attacks first has 2/3 chances to land the next hit; the defender has 1/3; and after each hit, the one who was hit last has 2/3 chances. We could therefore simply roll 1d6 and declare the attacker hits on 3-6 and the defender on 1-2, reversing the odds each time the attacker lands a hit. This saves one roll per successful hit. In practice, we would use a d20 and say that whoever has initiative has +3, or +4 with the card-drawing method, which give odds of 65% and 65.38% rather than 66.67%.

As a design decision, I don't in fact give an initiative bonus, because it seems like complexity that doesn't add to gameplay or story, and my objective is not to duplicate d20 outcomes, so much as to produce outcomes that look credible enough for a good game. There is a Quick special that grants the bonus in the first round of a fight, denoting winning initiative. I may in future give +4 to whoever lost the previous round, because it would reduce the variance of a given fight, and thus the risk of things like TPK.

=======
D6 DAMAGE
=======

This is similar to the negative consequences argument: by rolling damage at the same time as performing the check, we speed the game up. 

A d6 has somewhat less flexibility than arbitrary Platonic dice, but not much is lost in terms of game balance. For example, a D&D attack for d12 damage can be approximated by d6+3, with the same expected damage, albeit narrower support and lower variance.

I'm not entirely happy with this, because the general argument against dice as being too random still applies. It's the fastest sane idea I've had, and it mostly doesn't matter that much: even if you consistently roll low and your enemies roll high, damage bonuses mean you're unlikely to lose a fight unless it already would have been very close.

=======
THE COMBAT STAT
=======

Separate to-hit and to-not-be-hit modifiers make sense in d20, but not with a negative consequences mechanic: armour and weapon skill both improve the odds of landing the next hit, so there's no qualitative distinction between the two. We can therefore use a single combat mechanic that incorporates both. This simplifies and expedites combat.

An option is to define combat to be the sum of multiple other stats: armour, dodge, and threat. (Threat means a character's ability to make it difficult for an enemy to attack them without being hit first, eg a sword is worth more threat than a dagger because it's longer.) This way, certain attacks could bypass certain stats, eg an armour-piercing weapon might be very effective against an armoured enemy but unremarkable against one that relies on agility or threat. However, this increases complexity without affecting normal play, so extensive testing is needed to justify it.

One possible flaw is that it complicates the design of roles such as striker and tank. In d20, a striker typically has exceptional to-hit but poor armour, compared to a tank; with a single combat stat, this distinction becomes impossible. Roles are still possible with specials or non-clash combat, but these complicate and likely slow down the game.

=======
BATCHED TURNS
=======

A common issue with multiplayer games is dead time, in which a player has to sit and wait for a long time without being able to do anything. A game is supposed to be interactive; it's bad design to not let them act. It can be acceptable under some circumstances, such as a short cutscene, or if they can use it to plan for their next move, but it should not be part of the core mechanic. Longer turns and more other players make this worse; being able to do something off-turn ameliorates this, even if it's just planning your next move, as in chess.

A turn-based system also breaks the immersion of a large battle, because characters take turns rather than act all at once. That's not how you simulate a large battle; that's how you simulate a game of pool.

Batching prevents players from planning in response to other players' outcomes, which should hopefully reduce dead time. It also means players are moving at the same time in-story, which should improve immersion.

Finally, by having all characters make checks at the same time, we cut the time spent blocked even further. An encounter with 5 players fighting 5 NPCs might block 10-20 times per round under d20; but between batching, negative consequences, and concurrent damage rolls, Whiskey only needs 1 block per round.